{"version":3,"sources":["Components/PrefCheckBox.jsx","Components/ShowGraph.jsx","Components/UseApi.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["PrefCheckBox","props","prefectures","onChange","checkListItem","display","justifyContent","width","listStyle","checkListItemLabel","alphabets","Array","map","a","b","toString","i","length","ALPHABETS","toUpperCase","prefName","style","flexWrap","gap","padding","prefecture","type","name","event","prefCode","target","checked","id","htmlFor","ShowGraph","population","series","pop","data","pop_data","push","value","Highcharts","setOptions","lang","thousandsSep","options","chart","marginTop","marginRight","title","text","xAxis","rotation","align","offset","x","tickInterval","categories","yAxis","lineWidth","y","plotOptions","marker","enabled","highcharts","prefWrap","marginBottom","prefWrapTtl","fontSize","fontWeight","textAlign","UseApi","useState","setPreFectures","useEffect","axios","get","headers","process","then","results","result","slice","catch","error","console","log","setPopulation","check","eachPrefPopulation","findIndex","String","removeGraph","splice","app","maxWidth","margin","border","appTtl","backgroundColor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d462c45.chunk.js","sourcesContent":["import React from 'react';\n\nexport const PrefCheckBox = (props) => {\n  const { prefectures, onChange } = props;\n\n  const checkList = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '8px 16px',\n    padding: 0,\n  };\n  const checkListItem = {\n    display: 'flex',\n    justifyContent: 'center',\n    width: 40,\n    listStyle: 'none',\n  };\n  const checkListItemLabel = {\n    width: 15,\n  };\n\n  const alphabets = [...Array(26)].map((a, b) => (10 + b).toString(36));\n\n  for (let i = 0; i < prefectures.length; ++i) {\n    const ALPHABETS = alphabets[i].toUpperCase();\n    prefectures[i].prefName = ALPHABETS;\n  }\n\n  return (\n    <>\n      <ul style={checkList}>\n        {prefectures.map((prefecture) => (\n          <li key={prefecture.prefName} style={checkListItem}>\n            <input\n              type=\"checkbox\"\n              name=\"pref_name\"\n              onChange={(event) =>\n                onChange(prefecture.prefName, prefecture.prefCode, event.target.checked)\n              }\n              id={'checkbox' + prefecture.prefCode}\n            />\n            <label style={checkListItemLabel} htmlFor={'checkbox' + prefecture.prefCode}>\n              {prefecture.prefName}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nexport const ShowGraph = ({ population }) => {\n  let series = [];\n  let categories = ['', '', 1980, '', 1990, '', 2000, '', 2010, '', 2020];\n\n  for (let pop of population) {\n    let data = [];\n\n    for (let pop_data of pop.data) {\n      data.push(pop_data.value);\n    }\n    series.push({\n      type: 'line',\n      name: pop.prefName,\n      data: data,\n    });\n  }\n  Highcharts.setOptions({\n    lang: {\n      thousandsSep: ',',\n    },\n  });\n  const options = {\n    chart: {\n      marginTop: 35,\n      marginRight: 30,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      title: {\n        text: '年度',\n        rotation: 0,\n        align: 'high',\n        offset: 10,\n        x: 20,\n        tickInterval: 10,\n      },\n      categories: categories,\n    },\n    yAxis: {\n      lineWidth: 1,\n      title: {\n        text: '人口数',\n        align: 'high',\n        rotation: 0,\n        offset: 0,\n        y: -20,\n      },\n    },\n    series: series,\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport { PrefCheckBox } from './PrefCheckBox';\nimport { ShowGraph } from './ShowGraph';\n\nconst prefWrap = {\n  marginBottom: '32px',\n  padding: '3%',\n};\nconst prefWrapTtl = {\n  fontSize: 16,\n  fontWeight: 'initial',\n  textAlign: 'left',\n};\n\nexport const UseApi = () => {\n  const [prefectures, setPreFectures] = useState(null);\n\n  useEffect(() => {\n    // サイト表示する際に都道府県一覧を取得\n    axios\n      .get('https://opendata.resas-portal.go.jp/api/v1/prefectures', {\n        headers: { 'X-API-KEY': process.env.REACT_APP_API_KEY },\n      })\n      .then((results) => {\n        setPreFectures(results.data.result.slice(0, 18));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const [population, setPopulation] = useState([]);\n\n  // チェックボックスをクリックした際の処理\n  const clickCheckBox = (prefName, prefCode, check) => {\n    let eachPrefPopulation = population.slice();\n\n    // チェックをつけると都道府県別の人口取得\n    if (check) {\n      if (eachPrefPopulation.findIndex((value) => value.prefName === prefName) !== -1) return;\n      axios\n        .get(\n          'https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=' +\n            String(prefCode),\n          {\n            headers: { 'X-API-KEY': process.env.REACT_APP_API_KEY },\n          },\n        )\n        .then((results) => {\n          eachPrefPopulation.push({\n            prefName: prefName,\n            data: results.data.result.data[0].data.slice(2, 13),\n          });\n          setPopulation(eachPrefPopulation);\n        })\n        .catch((error) => {\n          console.log(error);\n          return;\n        });\n    }\n    // チェックを外すとグラフから削除\n    else {\n      const removeGraph = eachPrefPopulation.findIndex((value) => value.prefName === prefName);\n      if (removeGraph === -1) return;\n      eachPrefPopulation.splice(removeGraph, 1);\n      setPopulation(eachPrefPopulation);\n    }\n  };\n\n  return (\n    <>\n      <div style={prefWrap}>\n        <h3 style={prefWrapTtl}>都道府県</h3>\n        {prefectures && <PrefCheckBox prefectures={prefectures} onChange={clickCheckBox} />}\n      </div>\n      <ShowGraph population={population} />\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\n\nimport { UseApi } from './Components/UseApi';\n\nconst app = {\n  maxWidth: '1080px',\n  margin: '0 auto',\n  border: '1px solid #000',\n  textAlign: 'center',\n};\nconst appTtl = {\n  margin: 0,\n  padding: '20px 0',\n  backgroundColor: '#C4C4C4',\n};\n\nfunction App() {\n  return (\n    <div style={app}>\n      <h2 style={appTtl}>Title</h2>\n      <UseApi />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}